using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Text;
using System.Linq;
using System.Collections.Generic;
using Bioinformatics;
using Bioinformatics.Algorithms;

namespace BioTest
{
    [TestClass]
    public class MotifDistanceTests
    {
        [TestMethod]
        public void MotifDistance_Simple()
        {
            List<DnaStrand> strands = new List<DnaStrand>();
            strands.Add(new DnaStrand("TTACCTTAAC"));
            strands.Add(new DnaStrand("GATATCTGTC"));
            strands.Add(new DnaStrand("ACGGCGTTCG"));
            strands.Add(new DnaStrand("CCCTAAAGAG"));
            strands.Add(new DnaStrand("CGTCAGAGGT"));

            DnaStrand pattern = new DnaStrand("AAA");

            int distance = Motif.DistanceBetweenPatternsAndStrands(strands, pattern);

            Assert.AreEqual(5, distance);
        }


        [TestMethod]
        public void MotifDistance_Test1()
        {
            List<DnaStrand> strands = new List<DnaStrand>();
            strands.Add(new DnaStrand("TTTATTT"));
            strands.Add(new DnaStrand("CCTACAC"));
            strands.Add(new DnaStrand("GGTAGAG"));

            DnaStrand pattern = new DnaStrand("TAA");

            int distance = Motif.DistanceBetweenPatternsAndStrands(strands, pattern);

            Assert.AreEqual(3, distance);
        }


        [TestMethod]
        public void MotifDistance_Test2()
        {
            List<DnaStrand> strands = new List<DnaStrand>();
            strands.Add(new DnaStrand("AAACT"));
            strands.Add(new DnaStrand("AAAC"));
            strands.Add(new DnaStrand("AAAG"));

            DnaStrand pattern = new DnaStrand("AAA");

            int distance = Motif.DistanceBetweenPatternsAndStrands(strands, pattern);

            Assert.AreEqual(0, distance);
        }


        [TestMethod]
        public void MotifDistance_Test3()
        {
            List<DnaStrand> strands = new List<DnaStrand>();
            strands.Add(new DnaStrand("TTTTAAA"));
            strands.Add(new DnaStrand("CCCCAAA"));
            strands.Add(new DnaStrand("GGGGAAA"));

            DnaStrand pattern = new DnaStrand("AAA");

            int distance = Motif.DistanceBetweenPatternsAndStrands(strands, pattern);

            Assert.AreEqual(0, distance);
        }


        [TestMethod]
        public void MotifDistance_Test4()
        {
            List<DnaStrand> strands = new List<DnaStrand>();
            strands.Add(new DnaStrand("AAATTTT"));
            strands.Add(new DnaStrand("AAACCCC"));
            strands.Add(new DnaStrand("AAAGGGG"));

            DnaStrand pattern = new DnaStrand("AAA");

            int distance = Motif.DistanceBetweenPatternsAndStrands(strands, pattern);

            Assert.AreEqual(0, distance);
        }



        [TestMethod]
        public void MotifDistance_Test5()
        {
            List<DnaStrand> strands = new List<DnaStrand>();
            strands.Add(new DnaStrand("TCTGCAGAGCGCAAGCGTCTCAATGTTTTTCGCTGCAAGTGTTAGCTGCGTTTGTCGACACACAAATGAAGTGACCACATCAAACCTAATTATG"));
            strands.Add(new DnaStrand("CCTCCCTGCCAGGTTGGTGAATTTAAGCATAAAGACCTGGAGGACTGACGGGTCTGGTCGACCACCATTCGTCGGTTCTCGAGCGCTGTTTCTA"));
            strands.Add(new DnaStrand("ATGGAACCGTGTCACGGCAGTCTACCTTTTACCCAGAGCTGTATATGACGGTTAGTCCCCGAGGCCATCTCGCACCCTACTGAGCACAAATATA"));
            strands.Add(new DnaStrand("CCTATTAACTTCTCTCTAGATCGTAAACGACTATGGACTTACACGTCCCGCTTTCTTGTCTTGGGTGCCGTCACACTAGCCCACTACAGTCGGG"));
            strands.Add(new DnaStrand("TCTTGGTTACAATTACCCTCCTGAGCCGATAAGCGCCTCTCAGGCACACTGTGGCAGTTCATCGTGTCCTTCGTCTTATTCCCTGCCCCCAGCA"));
            strands.Add(new DnaStrand("ATCTATAGAAACATCTAGCACAGGAACACCCATAAAAACACCACTAGCCGACCTGTTCGTCGGTTTTCCATGCGAATGGTAATATTACGTTTGT"));
            strands.Add(new DnaStrand("GACCAAGGCCCGAAAGTGTGGCGAGATAAGAAAACCCACTCCATATGACCGTGGATCCCGTGGGAGTCCTCCTTTCATCCCTCTAGCGCTAGAA"));
            strands.Add(new DnaStrand("CGATGGTACCCAAGAGTGGTCGGTCTACCAAGCATCGCGACCCGCTTTCGTTCACCAGCCGAGAGTGCCATGTAAGTCAGCAGCTAACACCCTG"));
            strands.Add(new DnaStrand("AGGTGCAATTAACTGTACTAAGCTCAAGATCTCAATCCGCAAAGGCCATTCAGGCGACTCCGTGTGGTGCCTATACCGCACAAACGTAGGAGCG"));
            strands.Add(new DnaStrand("CCGAAAAGCCCAAAGGTTTTATGCAAGTTCCACGAGAATCGTCGAGCGCTGAGGTACGGCCACCGAATCACAATTCCATTCACATTCGCGGAGT"));
            strands.Add(new DnaStrand("AGTTGCCCAAGGTTTGGACCTGCCCGGTTTTCTGGCCGCGTATGAAGTATTCCAGTAGATCCCTGCGATACTTCTCGCTACGCTAGGTCCGATA"));
            strands.Add(new DnaStrand("CGCTTATGTCGTAAGTATAGCAACTAAGGGGCCATATGAACAAGTGTAGTACACGCGGCACCAGGTACCCTTAGGCGTTGTTCTTCGGAGGTTT"));
            strands.Add(new DnaStrand("CGTTTCCCTACACGGCCAATGAACAGCGGGCGCATAACATCTCTTAGCCCTGACTTCTGCGACGCATATATTTACCGGGACATGATCACAGTGT"));
            strands.Add(new DnaStrand("TGGTCTCACCAGTGGGCACCGCGTATTGTCAGGCAAGAGCAATTAGTGATTCGTACATAGAGGTCTTCAATCTCATGTATAGAGTCGCTGGTTC"));
            strands.Add(new DnaStrand("AGGTCTCTTCGAAATAGGTAGTGCCGGAACCATACTGAGAGTCTGCAAACGTTGCTTCGGAATGTACCTGTTGAGGACACTACTCTGACGGGCG"));
            strands.Add(new DnaStrand("TCCCGCTCGAGGACAGACACCGGTGCAGCCGAGGGTATTATAGTCTGCTCGTATGGTTTGTATGGAGGATAATAGATGGGGTGACGAAATGAGA"));
            strands.Add(new DnaStrand("GATACAGGTCGCTTGAAATGTCCCTGAGACGTCCGGGCCAAGAGCGAAACAAATCTCAGTCCTGGGTGGCGGCAGCGAAGGGATTAGATTACTT"));
            strands.Add(new DnaStrand("AATCCCTGCAGGTCAGGCTGTTCTGAAAGAACCCTGCAGGCTGGTGCTATTCCTTAAGACGCCGAGGTTCAGATACTCTCAGCCAGAGAGCAGA"));
            strands.Add(new DnaStrand("GGCGCACCTTCGATATTAATGCGAGTCAATTGCCGTTTAAGTCCGCGCGTAGCGGATGCACGTAGGGACTTTAAAGCCCCATGCCAACTGTATA"));
            strands.Add(new DnaStrand("ATCTCAATGCGATATATATGGTCCTGCCTAAAAATAGAGCTAGTGAGCGTGGTGGTATCATTGTTGACTACCCGGGACAGGCGACACCGTACGA"));
            strands.Add(new DnaStrand("ACGCATACGTCAGAAATCTGTGAAAGTACGACGCCCACTGGACCCACGGTCGCTGCGTTCACAATCATTGTGATCCTGGATCCATAACGCCTAA"));
            strands.Add(new DnaStrand("ATACCCCCGTAGTTTTCGGACTCAAAAAGTATTTATGTGACTTGCAATAGTAGAGACCGGCGTCTTTGCCGCTGTCACCTGCTGTATGATCACC"));
            strands.Add(new DnaStrand("TGTCTCAAGCATTACTATGGCTGGCCTCGTTATTAGATTCTGCCTAAGCCGCATGGGCGCGTGACCGTGGGCACATTGCCCTGAATTACCCGCC"));
            strands.Add(new DnaStrand("CATTAAGACGGATTGGGACCCGCGGGAGAAAGGCGCGTTGGAGCGAGGGGGTCATTTGCACTGCCGAGCAGACGCGTCTAGGTCATCTTCTCTA"));
            strands.Add(new DnaStrand("TTTCTTTGGCAGATGTCCTCCGGACTTCCGGAATGAAGCTTCAGGGCGCGCCTATCGCGAAACCCCGACGTGACGGAACGTCCTGTCCTGGACT"));
            strands.Add(new DnaStrand("CTCGTAAATAAACGGGATAACAAAGTGTTATCGATTATGTATAGCGGTCAGGGTGTCTGCACTTATCGGAGTCGGGAGGAGACCCTTCCTAAGA"));
            strands.Add(new DnaStrand("CTAAAGACCCCGCGTGGAATTAGAGGGAGCTCCAACGATAGAAATGAAGGAGGGGGCTTGTATAAATCCAACTGAAGGTGAACGAAGCTATAGA"));
            strands.Add(new DnaStrand("TTACAGCACAGCAAGAAATTCCGTGCTTGGGGGATCTACCGTGCATACTCCTGAGCCCAGATATTGGCCCGTAAGAATCATGCATTGAAAATAA"));
            strands.Add(new DnaStrand("ATGCACCTAGAAGAACATAGTTAAGAAGCGTCATGGAGCTACAGAGTTCCGTGGCAATGTACAGTAGCTGTTGCCAATTTGTTGGGACTCAGCC"));
            strands.Add(new DnaStrand("GCGATCACCCGCGACTCGTTCACTGGTACTTCCAATGCACTGCGCCCAATGCGCAATACGCGAATTCTCTTAAATGATCTCAAATATATGAGCT"));

            DnaStrand pattern = new DnaStrand("AATTGGG");

            int distance = Motif.DistanceBetweenPatternsAndStrands(strands, pattern);

            Assert.AreEqual(76, distance);
        }



        [TestMethod]
        public void MotifDistance_Test6()
        {
            List<DnaStrand> strands = new List<DnaStrand>();
            strands.Add(new DnaStrand("GGTCCCCCCTCGGAGAACAGCGACCTTGGTGCGTTGGTGTTCTCCCTATAGGTATCTAAGACAACCGAGCTAGGATGAATACAGAAAGACCCGTT"));
            strands.Add(new DnaStrand("ACCGCTGACCGGGTTCCGTACTTAGCTCGTTATGAGTGATGTCCCCCAAGCAACCCCCTGCAAAGTTAATGCTAAAATCGAAAGCAGAAACCTAC"));
            strands.Add(new DnaStrand("TCAACACATATGATACTTTAGCGGCCGTCGAGCCTCGAGTTGCAGGGTTTGCTCTCGTTTTATCCGGCAGAAACTGCTTGAGTACTCGATGCTAG"));
            strands.Add(new DnaStrand("GCACGGGTCGTATGGATTAACATTCGCGACCCACATTCGTCGACAATCCCAAAGATTCGGTCTACGTCGACGAGTACAACGAAGAGAACTGTCAG"));
            strands.Add(new DnaStrand("TCCGGAATCCGGGTGGCGGCCTACGGTACCTTCTACCTGCAGCTTACCACCTCCTGTACGCTGCTAGGCGTTCATCGCATAAGGTATTTCCTAAC"));
            strands.Add(new DnaStrand("ACATACTTACTACGACAGGTTATGCGCCCTGAGGGGCCTACATGCAAAGCCTACAATGGTGGTCTAGTTCCCTCGGATTCTTTCAGATTGGCACG"));
            strands.Add(new DnaStrand("ATTTTACCGCCAATCTTTTCTGGCTTGAAATTTAGCCTGCATCTTTTCTATTATCTCCCGGCTTTAATTACCATGTTTTGCCCTGGTACCCGGAA"));
            strands.Add(new DnaStrand("TATGATCAGAATGGGAACGTTTTGATCGCCCCTACAGGGGCCGTACGTGAAAGGACCTGCTCTCTTGGTGACATAATGAAGTGCACCACCTCTAA"));
            strands.Add(new DnaStrand("GCCCATATTCACACAGCCCTTCCGCTAGCTTATCCCCCTTTAAGGTCAACAGGCATCCGGCCTAATAAAGTCTAACTATTCCGGACAACGTGCAT"));
            strands.Add(new DnaStrand("TATTAGCCTAGTGTGGCGTTTTGGTCGATATCCCATATCGGGGGCCGCGTCTCGATGGCAAAACTTATTCTCATTTTAGTACCTCTAATCTACTC"));
            strands.Add(new DnaStrand("GCACGAATTGTGTATTAAAATGCGCAATGGCTAACGACAGATCCTACAGTGAGGAGACGCGGTACTCGACCGAATAAGAAGCAGATAAACCAAAT"));
            strands.Add(new DnaStrand("TTTGCCAAGGATAGAAATCATCCGTACGAACGGTGACTCTGCTTGGCTACTCGCCCGTATGTAAGGCGACAAGAGTCGTTTCCATATGTGCCTTG"));
            strands.Add(new DnaStrand("GCCTCGTGTGGTTACCGTGGAACCCCCTCCCACTTGATTCTAGGCGTACATTGCTGAACTCTATCCGGCCGCGCGGCCCTCCCCCCGTGGTTCAC"));
            strands.Add(new DnaStrand("GACGGACTAAATCCAGTTTGAAGTTGCCTAAGTCCATGCGTTTTCAATCCTATAGAGCGGTAGAAGGACCGTTTCATCTTCTCTCAGTGGATACT"));
            strands.Add(new DnaStrand("CACGAGGTCCGTCGCCTCGCCATCACTTGCTTCGCTTATGTGGGACAAAAGTCTCGCGCTGGATTTTGCACTCGAGATTAAATTCTCACATCAAC"));
            strands.Add(new DnaStrand("AATGACTTTCAGACGGCCAGGCCGTGATGGATAGGTTGGGTGTTAAACTAGTCTGTCTTACGCGCTAGAAGTCGGGAAGTCGGGGTCCTGACATA"));
            strands.Add(new DnaStrand("TGTCGAACGCCTCGCGTGATCCTCCAGGCCCGGAGATACAGACGCCCTTCGGATTTTGGAAACGCGTTTAATCTGAAGCTTTCGCCCTCCACGAC"));
            strands.Add(new DnaStrand("GGCTAGAACTGCGGATTACATAGGCTCGTCCTATCGAGTCCAGGCAGTGGTTTCGATAACGCGCTTCGCGATTTGTGATCTCTTATCTCAGGCAA"));
            strands.Add(new DnaStrand("TCAGAAAACGGAAAAAACCCACGGTTTTTTTCTCAACGGCCCGGATCCGTCACTCTGGAATGAAGAGGTCCTAGAACCTTCTCGTAGGCCGATCG"));
            strands.Add(new DnaStrand("CCGCCGCTAACCGTCGCCGTGTAAGTTTTGCAGGTTTAGGTGGCTCGGATAATAGAGCATGGCACAAGGAAACATGTATTCGTAGAGATTGTGGA"));
            strands.Add(new DnaStrand("GCGAGAGAGTTCCCCCCAAAGCACATACGGGCAGTTATCGCAGTAGTGTCACTTCATACGGTCGGGATGACGGCTTCTACAGCGAACAAACAATA"));
            strands.Add(new DnaStrand("GAGTGTTCTCGTCCGCGTGACCGAACGGTTGAGCACTCTAAGTGGGATCCAGGGGAATGCCCTCTCCGGAGCCATGAATTAACGACAGGCGCATG"));
            strands.Add(new DnaStrand("GCTGCTGACGAATTCCGAAACTCGTAAAATAGTGATTATTAGTTTAACGCCATCGATTTTTGTCCCAGTCTAGGCTCAGGGACGGGGTGCCACCG"));
            strands.Add(new DnaStrand("CGACGGTCCAGTTTTCAGGTTCCGACAAGCGGGAGTATGTAGCCACGTGACAATATGCTCACGTTTCTCCTGAACGCATCTAACGCCAAAGCGGC"));
            strands.Add(new DnaStrand("GCAGACATCAGTCTCCTATGGGGGTGGGTCCGTGCTCTCTCTATGAACCCCATAGATGAACGCTTATGCCCGTAGACTAGATGTTCCGCTGAACA"));
            strands.Add(new DnaStrand("AAAATACACGCACATCCAGCGGGGTCCTTAGAGGTCGTTGATTCCTGACTAAAGCCTGGCTAGAACACATGTTTGATGGTTTGCCTCGTTAGCTA"));
            strands.Add(new DnaStrand("AAAGGCTCGGATTTACCACCGGTTTCAATTGCGCTCGTCGTTGTGTCCCCGACCGGTACTGACGGCCTAATGAGTCTTCTTCGCAAGGGAGCAAC"));
            strands.Add(new DnaStrand("TCTCATTGAACGGCGGGGGGTCATGCCTAGTATGGAGGCCGCTGGGTGGGGATTGCGACATCATGGACCGACACAGCGACTAAACGGCACACTAA"));
            strands.Add(new DnaStrand("GCAAGATGGCCACTTCCGGCGATGAAGATGAAAGATCCAGGCAACACTGGGAATTCCGGAGAGGAATTGGTTATAGGATTTACTTTCAGACTAGA"));
            strands.Add(new DnaStrand("CACCTCCCTTGAGAGGTCGGAACGAACGGGAATCCCTCAAGCACAAATGTCCGGGGACAAGATTTTCGGAGATGCACTATTTTATAGCGATACTC"));
            strands.Add(new DnaStrand("AAGGACGTGATGTCGCATCGTTACGAGTGCGATCCCTCACTGTAGAACTTGCCGAGACAGCCCGTTGTTACAACGAAGCAGCACGCCGCACCGAA"));
            strands.Add(new DnaStrand("GACCAAGTTAGCGTATAGGGCCCGCTACGGCAAAGGGATATAACGATATTGCGGCCGACCGTTTCCACCGTGGTAAGATAATTCTCGAACTCAAA"));
            strands.Add(new DnaStrand("ACAATGAACCGGATACTTGACATAAAGGACATTAACACGCCTTCGAAATGCCTATCTAGAAAGGACGCCCTTTTTTGCCGCCCCAACTTGAGTGG"));
            strands.Add(new DnaStrand("GGTGGGCCCGATCTGGAAGGATGAAAGTCCTCATTCAAGCACAGAGCGTTTACCCGACTTTTTCTGTCCACGCAATTAACATACATTGGCCCCGC"));
            strands.Add(new DnaStrand("GACGGGCGGGCACCTTTAAAGTAGCGATCGTTGCCAGACCAACTTTCAATCACTGAAACACTTACCATTGATGCGTATTCAGTCGTCCCGTAAAA"));
            strands.Add(new DnaStrand("GCTTGCTAGAGCCATCCCTCAACCCTCGGATAAAGACTCTTCGCTGCCATGCACCGTTTTCGCTGAAAAAGGCTAAACTGAGGACCGACAGCCCC"));

            DnaStrand pattern = new DnaStrand("TCGGAC");

            int distance = Motif.DistanceBetweenPatternsAndStrands(strands, pattern);

            Assert.AreEqual(57, distance);
        }
    }
}
