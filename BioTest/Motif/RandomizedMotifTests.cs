using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.Text;
using System.Linq;
using System.Collections.Generic;
using Bioinformatics;

namespace BioTest
{
    [TestClass]
    public class RandomizedMotifTests
    {

        //[TestMethod]
        //public void MotifRandom_Simple()
        //{
        //    List<DnaStrand> strands = new List<DnaStrand>
        //    {
        //        new DnaStrand("CGCCCCTCTCGGGGGTGTTCAGTAAACGGCCA"),
        //        new DnaStrand("GGGCGAGGTATGTGTAAGTGCCAAGGTGCCAG"),
        //        new DnaStrand("TAGTACCGAGACCGAAAGAAGTATACAGGCGT"),
        //        new DnaStrand("TAGATCAAGTTTCAGGTGCACGTCGGTGAACC"),
        //        new DnaStrand("AATCCACCAGCTCCACGTGCAATGTTGGCCTA")
        //    };

        //    var results = Motif.RandomizedMotifSearch(strands, 8).ToList();

        //    Assert.AreEqual(5, results.Count);
        //    Assert.IsTrue(results.Any(x => x.Dna == "TCTCGGGG"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "CCAAGGTG"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "TACAGGCG"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "TTCAGGTG"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "TCCACGTG"));
        //}


        //[TestMethod]
        //public void MotifRandom_Test1()
        //{
        //    List<DnaStrand> strands = new List<DnaStrand>
        //    {
        //        new DnaStrand("AATTGGCACATCATTATCGATAACGATTCGCCGCATTGCC"),
        //        new DnaStrand("GGTTAACATCGAATAACTGACACCTGCTCTGGCACCGCTC"),
        //        new DnaStrand("AATTGGCGGCGGTATAGCCAGATAGTGCCAATAATTTCCT"),
        //        new DnaStrand("GGTTAATGGTGAAGTGTGGGTTATGGGGAAAGGCAGACTG"),
        //        new DnaStrand("AATTGGACGGCAACTACGGTTACAACGCAGCAAGAATATT"),
        //        new DnaStrand("GGTTAACTGTTGTTGCTAACACCGTTAAGCGACGGCAACT"),
        //        new DnaStrand("AATTGGCCAACGTAGGCGCGGCTTGGCATCTCGGTGTGTG"),
        //        new DnaStrand("GGTTAAAAGGCGCATCTTACTCTTTTCGCTTTCAAAAAAA")
        //    };

        //    var results = Motif.RandomizedMotifSearch(strands, 6).ToList();

        //    Assert.AreEqual(8, results.Count);
        //    Assert.IsTrue(results.Any(x => x.Dna == "CGATAA"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "GGTTAA"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "GGTATA"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "GGTTAA"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "GGTTAC"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "GGTTAA"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "GGCCAA"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "GGTTAA"));
        //}


        //[TestMethod]
        //public void MotifRandom_Test2()
        //{
        //    List<DnaStrand> strands = new List<DnaStrand>
        //    {
        //        new DnaStrand("GCACATCATTAAACGATTCGCCGCATTGCCTCGATTAACC"),
        //        new DnaStrand("TCATAACTGACACCTGCTCTGGCACCGCTCATCCAAGGCC"),
        //        new DnaStrand("AAGCGGGTATAGCCAGATAGTGCCAATAATTTCCTTAACC"),
        //        new DnaStrand("AGTCGGTGGTGAAGTGTGGGTTATGGGGAAAGGCAAGGCC"),
        //        new DnaStrand("AACCGGACGGCAACTACGGTTACAACGCAGCAAGTTAACC"),
        //        new DnaStrand("AGGCGTCTGTTGTTGCTAACACCGTTAAGCGACGAAGGCC"),
        //        new DnaStrand("AAGCTTCCAACATCGTCTTGGCATCTCGGTGTGTTTAACC"),
        //        new DnaStrand("AATTGAACATCTTACTCTTTTCGCTTTCAAAAAAAAGGCC")
        //    };

        //    var results = Motif.RandomizedMotifSearch(strands, 6).ToList();

        //    Assert.AreEqual(8, results.Count);
        //    Assert.IsTrue(results.Any(x => x.Dna == "TTAACC"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "ATAACT"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "TTAACC"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "TGAAGT"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "TTAACC"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "TTAAGC"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "TTAACC"));
        //    Assert.IsTrue(results.Any(x => x.Dna == "TGAACA"));
        //}



        //[TestMethod]
        //public void MotifRandom_Test3()
        //{
        //    List<DnaStrand> strands = new List<DnaStrand>
        //    {
        //        new DnaStrand("ACTAAAATAGCGAACCCTCCCATCGCAGCTTCGTTGAGAAGAGATACCCATGTGGGTGGGTAGATAACATGGATGTAAAAATCAGTCAACCCCTTATGCTGCTCCCGGCGTCTCGGGTCTGGGACCATCGCCTCAGTAAATGAAGCGCAGATAAGCAGTCCCAGCGACCTATCAAACATTAATGACTAAAATAGCGAAC"),
        //        new DnaStrand("CCTCCCCGGTGGGATGTGGGTATCGCAGCTTCGTTGAGAAGAGATACCCATGTGGGTGGGTAGATAACATGGATGTAAAAATCAGTCAACCCCTTATGCTGCTCCCGGCGTCTCGGGTCTGGGACCATCGCCTCAGTAAATGAAGCGCAGATAAGCAGTCCCAGCGACCTATCAAACATTAATGACTAAAATAGCGAAC"),
        //        new DnaStrand("AATTAACTCGCGGTTGGAATGGGGTAGATGGTTTCCTGCCTGTTCCGGCCAGTGCGAAGTCGGGGAATTTCCGATGAGGACTTGTCAAGAGTCTTTCGGGATGCGGAGCTGTCGGTTCAGTTCATTCCCTCATACAATATGCCTACTTTTTCTATTTGCTCCGGAAGAGTGTGGGTACTGACTATTAGTCTGTTATGCA"),
        //        new DnaStrand("CGACGAGCCCAAGCCTCTCGTTATGGGATGTTGTCGGACGTATGTGGGTCTCGCCCCTTACCACGGTAGAACGTGTTAAGCCACTTTCATACAAATACTTCCCGACCGTCGATTAGTCACCGGGCAAGGGCTGCCATAACCATTGCGCGCCATTCAACCGCTTTCCTTTTAGCCCGCGAGAATGCCACCTAACACGAAA"),
        //        new DnaStrand("AAAATTCGGAACGTCCTGGGTAGACGTCTCTCTAATGAGACTGAAGCTATCATAATCAATCAGTAGTTCCCTGTACGTTCAGGGGATGTATTAAGCTGCGGGTCGCGGTGCCGACCGCGGCAAGAAATAGGGTAGGGACCGAACCAGGAGTACCGTTGTGTACGAGACGAGCCCTAATTAATCCTCTCCGTCAACGATT"),
        //        new DnaStrand("CGCAAAGCAGTGCACGCCACAGTGAAATAAGCTTAGATCTATACTAGGCACTGCTGATTGCTAAATGTATAGTCCCAATGTGATCGCGATAACGCCATTATTATAGCTTGAAATGAGCTACACCAGCCTCTCCCGACCTACACGCGGAACGACCGGGGTCCCCCTGCGTTATGCCGGAAATCGTAATCGGGTATGCAGG"),
        //        new DnaStrand("AGGGACATTACACGTAGTGGTGACCCCATATCGTTACGGTTTGAGCATCCTAGTGTCGTTTCTGCATGCTCCTTCCAAACGGAGTGTTTATCCAGTGCCTGCTGACTCAGCGCGTTATTGAGCTCTTGTCATCTGCGAGGCCATAGAACGATGTGGGAGTTTTGGGAAGATGTGGGGAATCTTGGCTGGTGTAGGCCGT"),
        //        new DnaStrand("CGAACCGGAACGATGTGCTCCCATCCTGCAAACGGCTGACCCCTCCCGAACGTTCCGAGGCCTCGCCGCACCGTTGAGCGGCGAACCGTATACATTCGTTTGATCTGCTCGTGAGCACTCGGTCCCTAGCCCATACGGGGCCAGTTACCACGGATTTGGAACAGTCTCCCGAATAGAAATCCGATAAGGGTTCCTGGCA"),
        //        new DnaStrand("AAGCATCCGGCCGACACGGGGAGGACGTGACTAGCGAACTCGCAAGAGGTAATATGCTTCTGACGCGGGCAGGGTTCCCCGACCAAGGCTCAGTCGGGAACACTAAATTCTATCGTCAAATGGGTGACACACCTCCTCCGGAATCCTGTGGGTACAAAATGGGTCTTAATTCTTTCAGACAAGGTTCTACGGTTAATAC"),
        //        new DnaStrand("GGTTCCTGATAGTGTTTCCATACCACCAGTTAGCGTAGAATGAGGTAACCTGCTATCAGCTGCAGGATGAACGGAACTCCGTGGGTTGGAGTCGGGTATGAAGAACTAGAAAAAACGATTAGTGATGTGTCCCGTTTCGGACCTAAACTTGTTCCTGGGAAAGGAACGGGTTCCCCTCACCTGATCATACGGCAAGAAT"),
        //        new DnaStrand("CGATGGGTACCGGTAGTGGTGAAGCCACTGCCTTGCGTCACCGTTAATACCGGTCAGATGTGGGTTGTGTCCCGAGACGGTTTAGAGAGCATCCTGATGGTCAGATTGGGTGCAACAACGTCGGCCACGGGACCTTAGGTCCATATAGGTGCCGCGCGACGGCGGCGCTGGGAAAGCTCCGGTAGACACTGAGGAATTC"),
        //        new DnaStrand("CTCAACCGGAACGATGTATATTAGGGGTCCCGGATTACCGACAGTCCAATTATGACCAGTGCTGGTACCACTCCAGGGCGCTATCGTTCTTAACGATGAAAACTAGGGGGTGTTATATGATGGATACTACCGCGGCAGCATCATAGTGAACAGAGCGACCACAGGGCGCACTTCGTTCTTTCCAACGATTTTGCGTTAG"),
        //        new DnaStrand("CGCAGAAACAAACGGCCATATCGATCTCGGAGGAGTTCGTGTCCCAGTCGAAACAATAGAGCTTCAAGAGTCCTAGTATCTCACATGGTTATCTTCCGACATGCCTGCCGATGTATCACGAACATCAGTCACAGCGCAACAACGTGGGAACGAAGACAACCTACAGGTCCGGCGCCATGACGATGTGGGTGCGCGGTAG"),
        //        new DnaStrand("TAGGGATCTTATTGTTCGAAGATTTGGCTATACCACTCGGAGACATGTGGGTTTTGACAGTTGGGGCAATCTGTTATCAATCGCGGGACTTCTCGTACCGAGTACGTTGAACGGCTTCCCGACTTGTACGTCAAGAGAGTGAGGGGCAACCAAAGGCGTCACGACTCATCGCTCGATATGCAGGTACTGAATCATAACT"),
        //        new DnaStrand("AGCGTGGGAGGACACCTGCCACACAGAGCTGTCCCGTCAAGAGGAATGACCAGCCCCTTCGTAAGTCGCGTGTTTACTGTGAGGGGCAGTGTGGTTCGGGTAAGCGCCGGATTTGCATAAAGATCTCCGACTCGATGTGGGTGGCAACTAGCCCTCTAATAGGTCCATGGACACCTCTGCAGATGAGACCGTGCAAACA"),
        //        new DnaStrand("ATTAATAGGTGGCCTAATACCCCGTGCAGTTGCACAAGCGGGTTTGTGGCGGGGGCCCCGTCTATTATCTCGCATTGGTGACGGAACTTGGTGGGTTGCAACTAGTCGGAGCCACCTCCAAGTAAAGCTTTAAGCCAGACGAGCCCATATCTGGCCATTTAGCGTGCGTACATGGGTCATGAGTTACTCAGCTACGAGG"),
        //        new DnaStrand("GGGCCCATCAGGTACGAATCTTCCGAAACAATACTGACTCCCCTTTGGGACATCACTGACTGATGGACTAATCATCTGGATAAAAACGGTCGAGTCCAGACGTAGTGTTCCGTTCGATCAGGAAAGGTCGTACAACGATGTGGGTCACTACGGTGGTAGAAAAGAGATGGTAGGAGAAGATGTATCCACCGTACTATAA"),
        //        new DnaStrand("AGGCATGCCCGCGTGGATCGAAACTAATCGCAAACATACATCACGGCAGATTGCTATGGGGCTTAAGCTTTGTCCGGCCGCTAAGTCCCCTAATGGTAGGGGTATTGTAAACTGGTTGCGCGGCGTCCACGCAGCATTCTGCTGATAATCCGGAACGATGACTGTAGGATGTGCCTGGTGCCCCATTTCGCCTAGTAGT"),
        //        new DnaStrand("CGGCCTCTATTGTCCACTCTAGAGATATCCTAATCTCTACGACACTCAACAGTTTATGTCGCGCGTACCAGCTCCGGAACGATTACGGTAAGTAAGCGTAGTACATATTACCACGAAAAGAAGGAGTTTCGTGGTAAGTGTCTCCGGCAGACTATGATACTATAGCGAGGCCGCGACTGCCCTGCGGATGCAGAGAGCA"),
        //        new DnaStrand("GAGCGTGACAATATCTGGATAGACGACGTACGGTTGAGGGGCTTTAAGGCACGTCACTGGCTCGATACATACAACTCGAGGGGGTTTATCCCAGGAACGATGTGGCCGCGCCCTAATCTTTAGGAGCATTCAGCATGGGGTCACGATCCCTAACAGGTCGGTCTAAATTCGGGGTCTCGCAGTCGCTCCCGATAGTCGG")
        //    };

        //    var results = Motif.RandomizedMotifSearch(strands, 15).ToList();

        //    string visual = "";
        //    foreach (DnaStrand i in results)
        //    {
        //        visual += i.ToString();
        //        visual += " ";
        //    }
        //    Assert.AreEqual(visual.Trim(), "GATACCCATGTGGGT CGGTGGGATGTGGGT CGGAAGAGTGTGGGT CGGACGTATGTGGGT CGGAACGTCCTGGGT CGGAACGACCGGGGT TAGAACGATGTGGGA CGGAACGATGTGCTC CGGAATCCTGTGGGT CGGAACTCCGTGGGT CGGTCAGATGTGGGT CGGAACGATGTATAT CATGACGATGTGGGT CGGAGACATGTGGGT CGACTCGATGTGGGT CGGAACTTGGTGGGT TACAACGATGTGGGT CGGAACGATGACTGT CGGAACGATTACGGT AGGAACGATGTGGCC ");
        //}

    }
}
